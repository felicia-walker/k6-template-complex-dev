{
  "version": 3,
  "sources": ["../../src/k6-libs/k6-summary.js", "../../src/index.ts", "../../src/util/util.ts", "../../src/services/sample.service.ts"],
  "sourcesContent": ["var forEach = function (obj, callback) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (callback(key, obj[key])) {\n        break\n      }\n    }\n  }\n}\n\nvar palette = {\n  bold: 1,\n  faint: 2,\n  red: 31,\n  green: 32,\n  cyan: 36,\n  //TODO: add others?\n}\n\nvar groupPrefix = '\u00E2\u2013\u02C6'\nvar detailsPrefix = '\u00E2\u2020\u00B3'\nvar succMark = '\u00E2\u0153\u201C'\nvar failMark = '\u00E2\u0153\u2014'\nvar defaultOptions = {\n  indent: ' ',\n  enableColors: true,\n  summaryTimeUnit: null,\n  summaryTrendStats: null,\n}\n\n// strWidth tries to return the actual width the string will take up on the\n// screen, without any terminal formatting, unicode ligatures, etc.\nfunction strWidth(s) {\n  // TODO: determine if NFC or NFKD are not more appropriate? or just give up? https://hsivonen.fi/string-length/\n  var data = s.normalize('NFKC') // This used to be NFKD in Go, but this should be better\n  var inEscSeq = false\n  var inLongEscSeq = false\n  var width = 0\n  for (var char of data) {\n    if (char.done) {\n      break\n    }\n\n    // Skip over ANSI escape codes.\n    if (char == '\\x1b') {\n      inEscSeq = true\n      continue\n    }\n    if (inEscSeq && char == '[') {\n      inLongEscSeq = true\n      continue\n    }\n    if (inEscSeq && inLongEscSeq && char.charCodeAt(0) >= 0x40 && char.charCodeAt(0) <= 0x7e) {\n      inEscSeq = false\n      inLongEscSeq = false\n      continue\n    }\n    if (inEscSeq && !inLongEscSeq && char.charCodeAt(0) >= 0x40 && char.charCodeAt(0) <= 0x5f) {\n      inEscSeq = false\n      continue\n    }\n\n    if (!inEscSeq && !inLongEscSeq) {\n      width++\n    }\n  }\n  return width\n}\n\nfunction summarizeCheck(indent, check, decorate) {\n  if (check.fails == 0) {\n    return decorate(indent + succMark + ' ' + check.name, palette.green)\n  }\n\n  var succPercent = Math.floor((100 * check.passes) / (check.passes + check.fails))\n  return decorate(\n    indent +\n      failMark +\n      ' ' +\n      check.name +\n      '\\n' +\n      indent +\n      ' ' +\n      detailsPrefix +\n      '  ' +\n      succPercent +\n      '% \u00E2\u20AC\u201D ' +\n      succMark +\n      ' ' +\n      check.passes +\n      ' / ' +\n      failMark +\n      ' ' +\n      check.fails,\n    palette.red,\n  )\n}\n\nfunction summarizeGroup(indent, group, decorate) {\n  var result = []\n  if (group.name != '') {\n    result.push(indent + groupPrefix + ' ' + group.name + '\\n')\n    indent = indent + '  '\n  }\n\n  for (var i = 0; i < group.checks.length; i++) {\n    result.push(summarizeCheck(indent, group.checks[i], decorate))\n  }\n  if (group.checks.length > 0) {\n    result.push('')\n  }\n  for (var i = 0; i < group.groups.length; i++) {\n    Array.prototype.push.apply(result, summarizeGroup(indent, group.groups[i], decorate))\n  }\n\n  return result\n}\n\nfunction displayNameForMetric(name) {\n  var subMetricPos = name.indexOf('{')\n  if (subMetricPos >= 0) {\n    return '{ ' + name.substring(subMetricPos + 1, name.length - 1) + ' }'\n  }\n  return name\n}\n\nfunction indentForMetric(name) {\n  if (name.indexOf('{') >= 0) {\n    return '  '\n  }\n  return ''\n}\n\nfunction humanizeBytes(bytes) {\n  var units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n  var base = 1000\n  if (bytes < 10) {\n    return bytes + ' B'\n  }\n\n  var e = Math.floor(Math.log(bytes) / Math.log(base))\n  var suffix = units[e | 0]\n  var val = Math.floor((bytes / Math.pow(base, e)) * 10 + 0.5) / 10\n  return val.toFixed(val < 10 ? 1 : 0) + ' ' + suffix\n}\n\nvar unitMap = {\n  s: { unit: 's', coef: 0.001 },\n  ms: { unit: 'ms', coef: 1 },\n  us: { unit: '\u00C2\u00B5s', coef: 1000 },\n}\n\nfunction toFixedNoTrailingZeros(val, prec) {\n  // TODO: figure out something better?\n  return parseFloat(val.toFixed(prec)).toString()\n}\n\nfunction toFixedNoTrailingZerosTrunc(val, prec) {\n  var mult = Math.pow(10, prec)\n  return toFixedNoTrailingZeros(Math.trunc(mult * val) / mult, prec)\n}\n\nfunction humanizeGenericDuration(dur) {\n  if (dur === 0) {\n    return '0s'\n  }\n\n  if (dur < 0.001) {\n    // smaller than a microsecond, print nanoseconds\n    return Math.trunc(dur * 1000000) + 'ns'\n  }\n  if (dur < 1) {\n    // smaller than a millisecond, print microseconds\n    return toFixedNoTrailingZerosTrunc(dur * 1000, 2) + '\u00C2\u00B5s'\n  }\n  if (dur < 1000) {\n    // duration is smaller than a second\n    return toFixedNoTrailingZerosTrunc(dur, 2) + 'ms'\n  }\n\n  var result = toFixedNoTrailingZerosTrunc((dur % 60000) / 1000, dur > 60000 ? 0 : 2) + 's'\n  var rem = Math.trunc(dur / 60000)\n  if (rem < 1) {\n    // less than a minute\n    return result\n  }\n  result = (rem % 60) + 'm' + result\n  rem = Math.trunc(rem / 60)\n  if (rem < 1) {\n    // less than an hour\n    return result\n  }\n  return rem + 'h' + result\n}\n\nfunction humanizeDuration(dur, timeUnit) {\n  if (timeUnit !== '' && unitMap.hasOwnProperty(timeUnit)) {\n    return (dur * unitMap[timeUnit].coef).toFixed(2) + unitMap[timeUnit].unit\n  }\n\n  return humanizeGenericDuration(dur)\n}\n\nfunction humanizeValue(val, metric, timeUnit) {\n  if (metric.type == 'rate') {\n    // Truncate instead of round when decreasing precision to 2 decimal places\n    return (Math.trunc(val * 100 * 100) / 100).toFixed(2) + '%'\n  }\n\n  switch (metric.contains) {\n    case 'data':\n      return humanizeBytes(val)\n    case 'time':\n      return humanizeDuration(val, timeUnit)\n    default:\n      return toFixedNoTrailingZeros(val, 6)\n  }\n}\n\nfunction nonTrendMetricValueForSum(metric, timeUnit) {\n  switch (metric.type) {\n    case 'counter':\n      return [\n        humanizeValue(metric.values.count, metric, timeUnit),\n        humanizeValue(metric.values.rate, metric, timeUnit) + '/s',\n      ]\n    case 'gauge':\n      return [\n        humanizeValue(metric.values.value, metric, timeUnit),\n        'min=' + humanizeValue(metric.values.min, metric, timeUnit),\n        'max=' + humanizeValue(metric.values.max, metric, timeUnit),\n      ]\n    case 'rate':\n      return [\n        humanizeValue(metric.values.rate, metric, timeUnit),\n        succMark + ' ' + metric.values.passes,\n        failMark + ' ' + metric.values.fails,\n      ]\n    default:\n      return ['[no data]']\n  }\n}\n\nfunction summarizeMetrics(options, data, decorate) {\n  var indent = options.indent + '  '\n  var result = []\n\n  var names = []\n  var nameLenMax = 0\n\n  var nonTrendValues = {}\n  var nonTrendValueMaxLen = 0\n  var nonTrendExtras = {}\n  var nonTrendExtraMaxLens = [0, 0]\n\n  var trendCols = {}\n  var numTrendColumns = options.summaryTrendStats.length\n  var trendColMaxLens = new Array(numTrendColumns).fill(0)\n  forEach(data.metrics, function (name, metric) {\n    names.push(name)\n    // When calculating widths for metrics, account for the indentation on submetrics.\n    var displayName = indentForMetric(name) + displayNameForMetric(name)\n    var displayNameWidth = strWidth(displayName)\n    if (displayNameWidth > nameLenMax) {\n      nameLenMax = displayNameWidth\n    }\n\n    if (metric.type == 'trend') {\n      var cols = []\n      for (var i = 0; i < numTrendColumns; i++) {\n        var tc = options.summaryTrendStats[i]\n        var value = metric.values[tc]\n        if (tc === 'count') {\n          value = value.toString()\n        } else {\n          value = humanizeValue(value, metric, options.summaryTimeUnit)\n        }\n        var valLen = strWidth(value)\n        if (valLen > trendColMaxLens[i]) {\n          trendColMaxLens[i] = valLen\n        }\n        cols[i] = value\n      }\n      trendCols[name] = cols\n      return\n    }\n    var values = nonTrendMetricValueForSum(metric, options.summaryTimeUnit)\n    nonTrendValues[name] = values[0]\n    var valueLen = strWidth(values[0])\n    if (valueLen > nonTrendValueMaxLen) {\n      nonTrendValueMaxLen = valueLen\n    }\n    nonTrendExtras[name] = values.slice(1)\n    for (var i = 1; i < values.length; i++) {\n      var extraLen = strWidth(values[i])\n      if (extraLen > nonTrendExtraMaxLens[i - 1]) {\n        nonTrendExtraMaxLens[i - 1] = extraLen\n      }\n    }\n  })\n\n  // sort all metrics but keep sub metrics grouped with their parent metrics\n  names.sort(function (metric1, metric2) {\n    var parent1 = metric1.split('{', 1)[0]\n    var parent2 = metric2.split('{', 1)[0]\n    var result = parent1.localeCompare(parent2)\n    if (result !== 0) {\n      return result\n    }\n    var sub1 = metric1.substring(parent1.length)\n    var sub2 = metric2.substring(parent2.length)\n    return sub1.localeCompare(sub2)\n  })\n\n  var getData = function (name) {\n    if (trendCols.hasOwnProperty(name)) {\n      var cols = trendCols[name]\n      var tmpCols = new Array(numTrendColumns)\n      for (var i = 0; i < cols.length; i++) {\n        tmpCols[i] =\n          options.summaryTrendStats[i] +\n          '=' +\n          decorate(cols[i], palette.cyan) +\n          ' '.repeat(trendColMaxLens[i] - strWidth(cols[i]))\n      }\n\n      return tmpCols.join(' ')\n    }\n\n    var value = nonTrendValues[name]\n    var fmtData = decorate(value, palette.cyan) + ' '.repeat(nonTrendValueMaxLen - strWidth(value))\n\n    var extras = nonTrendExtras[name]\n    if (extras.length == 1) {\n      fmtData = fmtData + ' ' + decorate(extras[0], palette.cyan, palette.faint)\n    } else if (extras.length > 1) {\n      var parts = new Array(extras.length)\n      for (var i = 0; i < extras.length; i++) {\n        parts[i] =\n          decorate(extras[i], palette.cyan, palette.faint) + ' '.repeat(nonTrendExtraMaxLens[i] - strWidth(extras[i]))\n      }\n\n      fmtData = fmtData + ' ' + parts.join(' ')\n    }\n\n    return fmtData\n  }\n\n  for (var name of names) {\n    var metric = data.metrics[name]\n    var mark = ' '\n    var markColor = function (text) {\n      return text\n    } // noop\n\n    if (metric.thresholds) {\n      mark = succMark\n      markColor = function (text) {\n        return decorate(text, palette.green)\n      }\n      forEach(metric.thresholds, function (name, threshold) {\n        if (!threshold.ok) {\n          mark = failMark\n          markColor = function (text) {\n            return decorate(text, palette.red)\n          }\n          return true // break\n        }\n      })\n    }\n    var fmtIndent = indentForMetric(name)\n    var fmtName = displayNameForMetric(name)\n    fmtName =\n      fmtName + decorate('.'.repeat(nameLenMax - strWidth(fmtName) - strWidth(fmtIndent) + 3) + ':', palette.faint)\n\n    result.push(indent + fmtIndent + markColor(mark) + ' ' + fmtName + ' ' + getData(name))\n  }\n\n  return result\n}\n\nfunction summarizeMetricsCsv(options, data) {\n  var result = []\n  var names = []\n  var trendCols = {}\n  var numTrendColumns = options.summaryTrendStats.length\n  var trendColMaxLens = new Array(numTrendColumns).fill(0)\n\n  forEach(data.metrics, function (name, metric) {\n    names.push(name)\n    if (metric.type == 'trend') {\n      var cols = []\n      for (var i = 0; i < numTrendColumns; i++) {\n        var tc = options.summaryTrendStats[i]\n        var value = metric.values[tc]\n        if (tc === 'count') {\n          value = value.toString()\n        } else {\n          value = humanizeValue(value, metric, options.summaryTimeUnit)\n        }\n        var valLen = strWidth(value)\n        if (valLen > trendColMaxLens[i]) {\n          trendColMaxLens[i] = valLen\n        }\n        cols[i] = value\n      }\n      trendCols[name] = cols\n      return\n    }\n  })\n\n  // sort all metrics but keep sub metrics grouped with their parent metrics\n  names.sort(function (metric1, metric2) {\n    var parent1 = metric1.split('{', 1)[0]\n    var parent2 = metric2.split('{', 1)[0]\n    var result = parent1.localeCompare(parent2)\n    if (result !== 0) {\n      return result\n    }\n    var sub1 = metric1.substring(parent1.length)\n    var sub2 = metric2.substring(parent2.length)\n    return sub1.localeCompare(sub2)\n  })\n\n  var getData = function (name) {\n    if (trendCols.hasOwnProperty(name)) {\n      var cols = trendCols[name]\n      var tmpHeaderCols = new Array(numTrendColumns)\n      for (var i = 0; i < cols.length; i++) {\n        tmpHeaderCols[i] = options.summaryTrendStats[i]\n      }\n\n      var cols = trendCols[name]\n      var tmpCols = new Array(numTrendColumns)\n      for (var i = 0; i < cols.length; i++) {\n        // Normalize all values to milliseconds\n        var value = cols[i].replace('ms', '') // XXms\n        value = value.replace('\u00C2\u00B5s', ' / 1000') // XXus\n        value = value.replace('s', ' * 1000') // XXs\n        value = value.replace('m', ' * 60 * 1000 + ') // XXmYYs\n\n        try {\n          tmpCols[i] = eval(value)\n        } catch (err) {\n          tmpCols[i] = value\n        }\n      }\n\n      return [tmpHeaderCols, tmpCols.join(',')]\n    }\n\n    return ['', '']\n  }\n\n  var headerFound = false\n  for (var name of names) {\n    var fmtName = displayNameForMetric(name)\n    var data = getData(name)\n\n    if (!headerFound && data[0].length > 0) {\n      headerFound = true\n      result.push('names,' + data[0])\n    }\n\n    if (data[1].length > 0) {\n      result.push(fmtName + ',' + data[1])\n    }\n  }\n\n  return result\n}\n\nfunction generateTextSummary(data, options) {\n  var mergedOpts = Object.assign({}, defaultOptions, data.options, options)\n  var lines = []\n\n  // TODO: move all of these functions into an object with methods?\n  var decorate = function (text) {\n    return text\n  }\n  if (mergedOpts.enableColors) {\n    decorate = function (text, color /*, ...rest*/) {\n      var result = '\\x1b[' + color\n      for (var i = 2; i < arguments.length; i++) {\n        result += ';' + arguments[i]\n      }\n      return result + 'm' + text + '\\x1b[0m'\n    }\n  }\n\n  Array.prototype.push.apply(lines, summarizeGroup(mergedOpts.indent + '    ', data.root_group, decorate))\n\n  Array.prototype.push.apply(lines, summarizeMetrics(mergedOpts, data, decorate))\n\n  return lines.join('\\n')\n}\n\nfunction generateCsvSummary(data, options) {\n  var mergedOpts = Object.assign({}, defaultOptions, data.options, options)\n  var lines = []\n\n  Array.prototype.push.apply(lines, summarizeMetricsCsv(mergedOpts, data))\n\n  return lines.join('\\n')\n}\n\nexports.humanizeValue = humanizeValue\nexports.textSummary = generateTextSummary\nexports.csvSummary = generateCsvSummary\n\nvar replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;',\n}\n\nfunction escapeHTML(str) {\n  // TODO: something more robust?\n  return str.replace(/[&<>'\"]/g, function (char) {\n    return replacements[char]\n  })\n}\n\nfunction generateJUnitXML(data, options) {\n  var failures = 0\n  var cases = []\n\n  forEach(data.metrics, function (metricName, metric) {\n    if (!metric.thresholds) {\n      return\n    }\n    forEach(metric.thresholds, function (thresholdName, threshold) {\n      if (threshold.ok) {\n        cases.push('<testcase name=\"' + escapeHTML(metricName) + ' - ' + escapeHTML(thresholdName) + '\" />')\n      } else {\n        failures++\n        cases.push(\n          '<testcase name=\"' +\n            escapeHTML(metricName) +\n            ' - ' +\n            escapeHTML(thresholdName) +\n            '\"><failure message=\"failed\" /></testcase>',\n        )\n      }\n    })\n  })\n\n  var name = options && options.name ? escapeHTML(options.name) : 'k6 thresholds'\n\n  return (\n    '<?xml version=\"1.0\"?>\\n<testsuites tests=\"' +\n    cases.length +\n    '\" failures=\"' +\n    failures +\n    '\">\\n' +\n    '<testsuite name=\"' +\n    name +\n    '\" tests=\"' +\n    cases.length +\n    '\" failures=\"' +\n    failures +\n    '\">' +\n    cases.join('\\n') +\n    '\\n</testsuite >\\n</testsuites >'\n  )\n}\n\nexports.jUnit = generateJUnitXML\n", "export * from './util/util'\n\nexport * from './k6-libs/k6-summary'\n\nexport { default as SampleService } from './services/sample.service'\n", "import { csvSummary, jUnit, textSummary } from '../k6-libs/k6-summary'\n\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function handleSummary(data: any) {\n  const summary: { [key: string]: string } = {}\n  let showColors = true\n\n  if (__ENV.UPLOAD_RESULTS === 'true') {\n    showColors = false\n    const outdir = __ENV.OUT_DIR ?? '.'\n    summary[`${outdir}/junit.xml`] = jUnit(data, null)\n    summary[`${outdir}/summary.csv`] = csvSummary(data, null)\n    summary[`${outdir}/summary.txt`] = textSummary(data, { indent: ' ', enableColors: false })\n  } else {\n    summary.stdout = textSummary(data, { indent: ' ', enableColors: showColors })\n  }\n\n  return summary\n}\n", "import http, { RefinedResponse, ResponseType } from 'k6/http'\nimport { check, sleep } from 'k6'\nimport { Trend } from 'k6/metrics'\n\nexport default class SampleService {\n  protected delay = 1\n\n  constructor(delay = 1) {\n    this.delay = delay\n  }\n\n  public loadK6Page(...trends: Trend[]): RefinedResponse<ResponseType | undefined> {\n    const res = http.get('https://test.k6.io')\n    sleep(this.delay)\n\n    trends.forEach((trend: Trend) => {\n      trend.add(res.timings.waiting)\n    })\n\n    check(res, {\n      'K6 page request accepted': r => r.status === 200,\n      'K6 page content returned': r => r.body != null && r.body.length > 0,\n    })\n\n    return res\n  }\n}\n"],
  "mappings": "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",
  "names": ["data", "check", "result", "i", "name", "options", "names", "trendCols", "numTrendColumns", "trendColMaxLens", "metric", "cols", "value", "getData", "tmpCols", "fmtName", "data"]
}
